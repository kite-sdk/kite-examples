# Copyright 2013 Cloudera Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Defined for local consumption, with no ZooKeeper required. The important part is just the
# path defined by SOLR_HOME_DIR so the Solr schema.xml can be found.

SOLR_COLLECTION : collection1
SOLR_HOME_DIR : "src/test/resources/solr/collection1"
SOLR_URL : "http://127.0.0.1:8983/solr/"${SOLR_COLLECTION}
ZK_HOST : "127.0.0.1:2181/solr"

SOLR_LOCATOR {
  zkHost : ${ZK_HOST}
  solrUrl : ${SOLR_URL}
  collection : ${SOLR_COLLECTION}
  solrHomeDir : ${SOLR_HOME_DIR}
}

morphlines : [
  {
    id : morphline1
    importCommands : ["org.kitesdk.**", "org.apache.solr.**" ]
    #importCommands : ["com.cloudera.cdk.**", "org.apache.solr.**"]
    
    commands : [
      {
        readLine {
          charset : "UTF-8"
        }
      },
      
      { # Parse incoming record into three fields
        split {
          inputField : message
          outputFields : [title, last_edited, text]
          separator : ","
          isRegex : false
          addEmptyStrings : false
          trim : true
        }
      },
      
      { # Now transform last_edited field into a Solr-style date
        convertTimestamp {
          field : "last_edited"
          inputFormats : [
            "dd-MMM-yyyy"
          ]
          inputTimezone : "America/Los_Angeles"
          outputFormat : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
          outputTimezone : UTC
        }
      },

      { # Add the unix timestamp to a field called (by default) "timestamp"
        addCurrentTime {}
      },
      
      { # Convert Unix timestamp into a Solr-style date
        convertTimestamp {
          field : timestamp
          inputFormats : [
            unixTimeInMillis
          ]
          inputTimezone : UTC
          outputFormat : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
          outputTimezone : UTC
        }
      },
      
      { # Generate a UUID as a primary key for Solr
        generateUUID {
          field : id
        }
      },
      
      { # Remove record fields that are unknown to Solr schema.xml. 
        # Recall that Solr throws an exception on any attempt to load a document that 
        # contains a field that isn't specified in schema.xml. 
        sanitizeUnknownSolrFields {          
          solrLocator : ${SOLR_LOCATOR} # Location from which to fetch Solr schema
        }
      },
      
      # log the record at DEBUG level to SLF4J
      { logDebug { format : "output record: {}", args : ["@{}"] } },      
      
      # load the record into a SolrServer or MapReduce Reducer.
      # Commenting out the loadSolr to be able to estimate if it's creating backpressure on flume 
      # UNCOMMENT WHEN READY TO LOAD INTO SOLR
      #
      #{
      #  loadSolr {
      #    solrLocator : ${SOLR_LOCATOR}
      #  }
      #}
    ]    
  }
]
